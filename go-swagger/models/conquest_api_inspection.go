// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConquestAPIInspection conquest api inspection
//
// swagger:model conquest_apiInspection
type ConquestAPIInspection struct {

	// inspection date
	// Format: date-time
	InspectionDate strfmt.DateTime `json:"InspectionDate,omitempty"`

	// inspection ID
	InspectionID int32 `json:"InspectionID,omitempty"`

	// inspection notes
	InspectionNotes string `json:"InspectionNotes,omitempty"`

	// from the Inspection Type code list
	InspectionType int32 `json:"InspectionType,omitempty"`

	// inspector
	Inspector string `json:"Inspector,omitempty"`

	// object key
	ObjectKey *ConquestAPIObjectKey `json:"ObjectKey,omitempty"`

	// organisation
	Organisation string `json:"Organisation,omitempty"`
}

// Validate validates this conquest api inspection
func (m *ConquestAPIInspection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInspectionDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIInspection) validateInspectionDate(formats strfmt.Registry) error {

	if swag.IsZero(m.InspectionDate) { // not required
		return nil
	}

	if err := validate.FormatOf("InspectionDate", "body", "date-time", m.InspectionDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConquestAPIInspection) validateObjectKey(formats strfmt.Registry) error {

	if swag.IsZero(m.ObjectKey) { // not required
		return nil
	}

	if m.ObjectKey != nil {
		if err := m.ObjectKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIInspection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIInspection) UnmarshalBinary(b []byte) error {
	var res ConquestAPIInspection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
