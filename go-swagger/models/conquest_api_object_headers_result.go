// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ConquestAPIObjectHeadersResult conquest api object headers result
//
// swagger:model conquest_apiObjectHeadersResult
type ConquestAPIObjectHeadersResult struct {

	// headers
	Headers []*ConquestAPIObjectHeader `json:"Headers"`

	// x data is complete
	XDataIsComplete bool `json:"X_DataIsComplete,omitempty"`

	// X_RelatedContexts is a list of ContextDescriptors that the returned objects can use
	XRelatedContexts []*ConquestAPIContextDescriptor `json:"X_RelatedContexts"`
}

// Validate validates this conquest api object headers result
func (m *ConquestAPIObjectHeadersResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHeaders(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateXRelatedContexts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIObjectHeadersResult) validateHeaders(formats strfmt.Registry) error {

	if swag.IsZero(m.Headers) { // not required
		return nil
	}

	for i := 0; i < len(m.Headers); i++ {
		if swag.IsZero(m.Headers[i]) { // not required
			continue
		}

		if m.Headers[i] != nil {
			if err := m.Headers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Headers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ConquestAPIObjectHeadersResult) validateXRelatedContexts(formats strfmt.Registry) error {

	if swag.IsZero(m.XRelatedContexts) { // not required
		return nil
	}

	for i := 0; i < len(m.XRelatedContexts); i++ {
		if swag.IsZero(m.XRelatedContexts[i]) { // not required
			continue
		}

		if m.XRelatedContexts[i] != nil {
			if err := m.XRelatedContexts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("X_RelatedContexts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIObjectHeadersResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIObjectHeadersResult) UnmarshalBinary(b []byte) error {
	var res ConquestAPIObjectHeadersResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
