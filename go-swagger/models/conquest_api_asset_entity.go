// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConquestAPIAssetEntity AssetEntity is comprised of the Asset's Record and auxiliary fields (calculated, related)
//
// swagger:model conquest_apiAssetEntity
type ConquestAPIAssetEntity struct {

	// action permission
	ActionPermission ConquestAPIPermission `json:"ActionPermission,omitempty"`

	// adding date
	// Format: date-time
	AddingDate strfmt.DateTime `json:"AddingDate,omitempty"`

	// adding user
	AddingUser string `json:"AddingUser,omitempty"`

	// asset ID
	AssetID int32 `json:"AssetID,omitempty"`

	// AttributeID for the AttributeSet configured on the AssetType
	AttributeID int32 `json:"AttributeID,omitempty"`

	// defect permission
	DefectPermission ConquestAPIPermission `json:"DefectPermission,omitempty"`

	// edit date
	// Format: date-time
	EditDate strfmt.DateTime `json:"EditDate,omitempty"`

	// editor
	Editor string `json:"Editor,omitempty"`

	// inspection ID
	InspectionID int32 `json:"InspectionID,omitempty"`

	// inspection notes
	InspectionNotes string `json:"InspectionNotes,omitempty"`

	// ParentID is 0 if this is a Facility
	ParentID int32 `json:"ParentID,omitempty"`

	// string FamilyCode = 49;
	Permission ConquestAPIPermission `json:"Permission,omitempty"`

	// record
	Record *ConquestAPIAssetRecord `json:"Record,omitempty"`

	// replaced asset
	ReplacedAsset int32 `json:"ReplacedAsset,omitempty"`

	// retirement date
	RetirementDate *ConquestAPITimestampValue `json:"RetirementDate,omitempty"`

	// retirement reason
	RetirementReason string `json:"RetirementReason,omitempty"`

	// retirement user
	RetirementUser string `json:"RetirementUser,omitempty"`

	// split asset ID
	SplitAssetID int32 `json:"SplitAssetID,omitempty"`

	// status
	Status string `json:"Status,omitempty"`

	// lock
	Lock *ConquestAPILock `json:"lock,omitempty"`
}

// Validate validates this conquest api asset entity
func (m *ConquestAPIAssetEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionPermission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAddingDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefectPermission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEditDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePermission(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRecord(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRetirementDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLock(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIAssetEntity) validateActionPermission(formats strfmt.Registry) error {

	if swag.IsZero(m.ActionPermission) { // not required
		return nil
	}

	if err := m.ActionPermission.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ActionPermission")
		}
		return err
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateAddingDate(formats strfmt.Registry) error {

	if swag.IsZero(m.AddingDate) { // not required
		return nil
	}

	if err := validate.FormatOf("AddingDate", "body", "date-time", m.AddingDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateDefectPermission(formats strfmt.Registry) error {

	if swag.IsZero(m.DefectPermission) { // not required
		return nil
	}

	if err := m.DefectPermission.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("DefectPermission")
		}
		return err
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateEditDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EditDate) { // not required
		return nil
	}

	if err := validate.FormatOf("EditDate", "body", "date-time", m.EditDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validatePermission(formats strfmt.Registry) error {

	if swag.IsZero(m.Permission) { // not required
		return nil
	}

	if err := m.Permission.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("Permission")
		}
		return err
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateRecord(formats strfmt.Registry) error {

	if swag.IsZero(m.Record) { // not required
		return nil
	}

	if m.Record != nil {
		if err := m.Record.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Record")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateRetirementDate(formats strfmt.Registry) error {

	if swag.IsZero(m.RetirementDate) { // not required
		return nil
	}

	if m.RetirementDate != nil {
		if err := m.RetirementDate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("RetirementDate")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIAssetEntity) validateLock(formats strfmt.Registry) error {

	if swag.IsZero(m.Lock) { // not required
		return nil
	}

	if m.Lock != nil {
		if err := m.Lock.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lock")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIAssetEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIAssetEntity) UnmarshalBinary(b []byte) error {
	var res ConquestAPIAssetEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
