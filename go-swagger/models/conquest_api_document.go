// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConquestAPIDocument conquest api document
//
// swagger:model conquest_apiDocument
type ConquestAPIDocument struct {

	// content
	Content string `json:"Content,omitempty"`

	// ContentLength in bytes
	ContentLength string `json:"ContentLength,omitempty"`

	// content type
	ContentType string `json:"ContentType,omitempty"`

	// create time
	// Format: date-time
	CreateTime strfmt.DateTime `json:"CreateTime,omitempty"`

	// created by
	CreatedBy string `json:"CreatedBy,omitempty"`

	// document description
	DocumentDescription string `json:"DocumentDescription,omitempty"`

	// document ID
	DocumentID int32 `json:"DocumentID,omitempty"`

	// FileShouldBeAccessible reports whether the document file SHOULD be accessible.
	//
	// This depends on two things:
	// - Is the file from a correctly configured document location?
	// - Has the file been uploaded successfully (UploadStatus_Completed)?
	FileShouldBeAccessible bool `json:"FileShouldBeAccessible,omitempty"`

	// Link is the location from which a document can be accessed. It is calculated from the document Address.
	//
	// Link is empty when a location requires accessing a document with a security token.
	//
	// All uploaded documents will have an empty Link field.
	//
	// You can obtain an appropriate link which encodes a security token using the GenerateDocumentLinkCommand
	// OR use the "/download/document?object_type=...&object_id=...&document_id=..." endpoint which will either serve
	//    the file or redirect to a link, potentially generated by the GenerateDocumentLinkCommand
	Link string `json:"Link,omitempty"`

	// object key
	ObjectKey *ConquestAPIObjectKey `json:"ObjectKey,omitempty"`

	// order
	Order int32 `json:"Order,omitempty"`

	// upload status
	UploadStatus ConquestAPIUploadStatus `json:"UploadStatus,omitempty"`
}

// Validate validates this conquest api document
func (m *ConquestAPIDocument) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUploadStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConquestAPIDocument) validateCreateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("CreateTime", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConquestAPIDocument) validateObjectKey(formats strfmt.Registry) error {

	if swag.IsZero(m.ObjectKey) { // not required
		return nil
	}

	if m.ObjectKey != nil {
		if err := m.ObjectKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ObjectKey")
			}
			return err
		}
	}

	return nil
}

func (m *ConquestAPIDocument) validateUploadStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.UploadStatus) { // not required
		return nil
	}

	if err := m.UploadStatus.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("UploadStatus")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConquestAPIDocument) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConquestAPIDocument) UnmarshalBinary(b []byte) error {
	var res ConquestAPIDocument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
